version: '3.8'

# 네트워크 tobias-network 생성



services:

  app:
    image: imkunyoung/discoveryservice
    container_name: discoveryservice
    ports:
      - 8761:8761
    volumes:
      - /app
    networks:
      - tobias-network

  app2:
    image: imkunyoung/gatewayservice_client:1.0
    container_name: gatewayservice_client
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
    ports:
      - 8000:8000
      - 80:80
    volumes:
      - /app2
    networks:
      - tobias-network

  app3:
    image: imkunyoung/gatewayservice_saler:1.0
    container_name: gatewayservice_saler
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
    ports:
      - 81:81
    volumes:
      - /app3
    networks:
      - tobias-network

  app4:
    image: imkunyoung/gatewayservice_manager:1.0
    container_name: gatewayservice_manager
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
    ports:
      - 82:82
    volumes:
      - /app4
    networks:
      - tobias-network

  app5:
    image: imkunyoung/configservice:1.0
    container_name: configservice
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
    ports:
      - 8888:8888
    volumes:
      - /app5
    networks:
      - tobias-network



  coupon-mariadb:
    image: mariadb:latest
    container_name: coupon-mariadb
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=couponservice
      - MYSQL_USER=couponservice
      - MYSQL_PASSWORD=1234
    #    ports:
    #      - 3306:3306
    volumes:
      - ~/docker/mariadb/var/lib/mysql:/var/lib/mysql
      - ~/docker/mariadb/var/log/maria:/var/log/maria
    networks:
      - tobias-network

  app7:
    image: imkunyoung/couponservice:1.0
    container_name: couponservice
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
      - spring.datasource.url=jdbc:mariadb://coupon-mariadb:3306/couponservice?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=false
      - spring.datasource.username=couponservice
      - spring.datasource.password=1234
    depends_on:
      - kafka
      - coupon-mariadb
    #    ports:
    #      - 8003:8003
    volumes:
      - /app7
    networks:
      - tobias-network
  # mariadb
  #  app6:
  #    image: mariadb:10.5.8
  #    container_name: mariadb
  #    ports:
  #      - 3306:3306
  #    volumes:
  #      - /app6
  #    networks:
  #      - tobias-network
  #    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  #    environment:
  #      - MYSQL_ROOT_PASSWORD=bootuser
  #      - MYSQL_DATABASE=bootex
  #      - MYSQL_USER=bootuser

  pointservice2-mongodb:
    image: mongo:4.4.15
    ports:
      - 27017:27017
    networks:
      - tobias-network
    # volumes:
    #   - ~/volumes/jhipster/pointService2/mongodb/:/data/db/
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - tobias-network
  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
    networks:
      - tobias-network


  app8:
    image: imkunyoung/pointservice:1.0
    container_name: pointservice
    depends_on:
      - pointservice2-mongodb
      - kafka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
      - spring.cloud.config.uri=http://configservice:8888
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - SPRING_DATA_MONGODB_URI=mongodb+srv://test:93414223@cluster0.3f1nxzq.mongodb.net/?retryWrites=true&w=majority
      - SPRING_DATA_MONGODB_DATABASE=mygrocerylist
      - JHIPSTER_SLEEP=30 # gives time for other services to boot before the application
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    networks:
      - tobias-network




  basket-mysql:
    image: mysql:latest
    container_name: basket-mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=basketservice
      - MYSQL_USER=basketservice
      - MYSQL_PASSWORD=1234
    #    ports:
    #      - 3306:3306
    volumes:
      - ~/docker/mysql/var/lib/mysql:/var/lib/mysql
      - ~/docker/mysql/var/log/mysql:/var/log/mysql
    networks:
      - tobias-network

  app9:
    image: imkunyoung/basketservice:1.0
    container_name: basketservice
    depends_on:
      - basket-mysql
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
      - spring.cloud.config.uri=http://configservice:8888
      - spring.profiles.active=prod
      - spring.datasource.url=jdbc:mysql://basket-mysql:3306/basketservice?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=false
      - spring.datasource.username=basketservice
      - spring.datasource.password=1234
    volumes:
      - /app9
    networks:
      - tobias-network





  client-mariadb:
    image: mariadb:latest
    container_name: client-mariadb
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=clientservice
      - MYSQL_USER=clientservice
      - MYSQL_PASSWORD=1234
    #    ports:
    #      - 3306:3306
    volumes:
      - ~/docker/client-mariadb/var/lib/mysql:/var/lib/mysql
      - ~/docker/client-mariadb/var/log/maria:/var/log/maria
    networks:
      - tobias-network

  app10:
    image: imkunyoung/clientservice:1.0
    container_name: clientservice
    depends_on:
      - client-mariadb
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
      - spring.cloud.config.uri=http://configservice:8888
      - spring.profiles.active=prod
      - spring.datasource.url=jdbc:mariadb://client-mariadb:3306/clientservice?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=false
      - spring.datasource.username=clientservice
      - spring.datasource.password=1234
    volumes:
      - /app10
    networks:
      - tobias-network


  app11:
    image: imkunyoung/myapp:1.0
    container_name: myapp
    ports:
      - 3000:3000
    volumes:
      - /app11
  #    networks:
  #      - tobias-network


  saler-mariadb:
    image: mariadb:latest
    container_name: saler-mariadb
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=salerservice
      - MYSQL_USER=salerservice
      - MYSQL_PASSWORD=1234
    #    ports:
    #      - 3306:3306
    volumes:
      - ~/docker/saler-mariadb/var/lib/mysql:/var/lib/mysql
      - ~/docker/saler-mariadb/var/log/maria:/var/log/maria
    networks:
      - tobias-network

  app12:
    image: imkunyoung/salerservice:1.0
    container_name: salerservice
    depends_on:
      - saler-mariadb
      - kafka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
      - spring.cloud.config.uri=http://configservice:8888
      - spring.profiles.active=prod
      - spring.datasource.url=jdbc:mariadb://saler-mariadb:3306/salerservice?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=false
      - spring.datasource.username=salerservice
      - spring.datasource.password=1234
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    volumes:
      - /app12
    networks:
      - tobias-network


  manager-mariadb:
    image: mariadb:latest
    container_name: manager-mariadb
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=managerservice
      - MYSQL_USER=managerservice
      - MYSQL_PASSWORD=1234
    #    ports:
    #      - 3306:3306
    volumes:
      - ~/docker/managers-mariadb/var/lib/mysql:/var/lib/mysql
      - ~/docker/managers-mariadb/var/log/maria:/var/log/maria
    networks:
      - tobias-network

  app13:
    image: imkunyoung/managerservice:1.0
    container_name: managerservice
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
      - spring.cloud.config.uri=http://configservice:8888
      - spring.profiles.active=prod
      - spring.datasource.url=jdbc:mariadb://manager-mariadb:3306/managerservice?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=false
      - spring.datasource.username=managerservice
      - spring.datasource.password=1234
      - spring.kafka.bootstrap-servers=kafka:9092
    depends_on:
      - manager-mariadb
      - app5
      - kafka
    volumes:
      - /app13
    networks:
      - tobias-network


  delivery-postgresql:
    image: postgres:latest
    container_name: delivery-postgresql
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: delivery
    #    ports:
    #      - 5432:5432
    volumes:
      - ./data/deliverypostgres/:/var/lib/deliverypostgresql/data
    networks:
      - tobias-network

  app14:
    depends_on:
      - delivery-postgresql
      - kafka
    image: imkunyoung/deliveryservice:1.0
    container_name: deliveryservice
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
#      - spring.cloud.config.uri=http://configservice:8888
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://delivery-postgresql:5432/delivery
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_PLATFORM=postgres
    volumes:
      - /app14
    networks:
      - tobias-network






  app15:
    image: imkunyoung/recentlyviewedservice:1.0
    container_name: recentlyviewedservice
    depends_on:
      - recentlyviewedservice-cassandra
      - kafka
      - app5
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
      - spring.cloud.config.uri=http://configservice:8888
      - spring.profiles.active=prod
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - SPRING_DATA_CASSANDRA_CONTACTPOINTS=recentlyviewedservice-cassandra
      - JHIPSTER_SLEEP=30 # gives time for other services to boot before the application
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    volumes:
      - /app15
    networks:
      - tobias-network
  recentlyviewedservice-cassandra:
    image: cassandra:3.11.13
    container_name: recentlyviewedservice-cassandra
#    volumes:
#      - ~/volumes/jhipster/recentlyviewedService/cassandra/:/var/lib/cassandra/data
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    #    ports:
    #      - 7000:7000
    #      - 7001:7001
    #      - 7199:7199
    #      - 9042:9042
    #      - 9160:9160
    networks:
      - tobias-network
  #  recentlyviewedservice-cassandra-migration:
  #    environment:
  #      - CASSANDRA_CONTACT_POINT=recentlyviewedservice-cassandra
  #      - USER=docker-cassandra-migration
  #      # - DEBUG_LOG=1 # uncomment to show debug logs during the migration process
  #      - CREATE_KEYSPACE_SCRIPT=create-keyspace-prod.cql
  #    build:
  #      context: .
  #      dockerfile: cassandra/Cassandra-Migration.Dockerfile
  #    volumes:
  #      - ../resources/config/cql:/cql:ro
  #    networks:
  #      - tobias-network

  orderservice-postgresql:
    image: postgres:latest
    container_name: orderservice-postgresql
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: orderservice
    #    ports:
    #      - 5432:5432
    volumes:
      - ./data/orderpostgres/:/var/lib/dorderpostgresql/data
    networks:
      - tobias-network

  app17:
    depends_on:
      - orderservice-postgresql
      - kafka
    image: imkunyoung/orderservice:1.0
    container_name: orderservice
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
      - spring.cloud.config.uri=http://configservice:8888
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://orderservice-postgresql:5432/orderservice
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_PLATFORM=postgres
    volumes:
      - /app17
    networks:
      - tobias-network

  product-mariadb:
    image: mariadb:latest
    container_name: product-mariadb
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=productservice
      - MYSQL_USER=productservice
      - MYSQL_PASSWORD=1234
    #    ports:
    #      - 3306:3306
    volumes:
      - ~/docker/product-mariadb/var/lib/mysql:/var/lib/mysql
      - ~/docker/product-mariadb/var/log/maria:/var/log/maria
    networks:
      - tobias-network

  app18:
    image: imkunyoung/productservice:1.0
    container_name: productservice
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discoveryservice:8761/eureka/
      - spring.profiles.active=prod
      - spring.datasource.url=jdbc:mariadb://product-mariadb:3306/productservice?serverTimezone=UTC&characterEncoding=UTF-8&useSSL=false
      - spring.datasource.username=productservice
      - spring.datasource.password=1234
#      - spring.kafka.bootstrap-servers=kafka:9092
    depends_on:
      - product-mariadb
      - app5
      - kafka
    volumes:
      - /app18
    networks:
      - tobias-network

networks:
  tobias-network:
    driver: bridge